GolangのFirebase Admin SDKで、Firebaseを使った認証を作る。それを目指そう。
フロントエンドはUnityにした。理由は色々ある。

最大の理由はWebフロントエンド技術が好きではないから。
SSRとか、ダウンロードプロセスがないWebだからやらざるを得ないだけの技術で、
本質的だともやるべきだとも思わない。
ユーザーにとっての「Webにおける当たり前」
を押し付けられる形で無理やり成立させられた必要悪だと思ってる。
そして、React, Next, Svelte、Remix、多分何を採用しても即座に廃れて、
リプレースを余儀なくされる運命にあると思っている。
そういうのは本当に嫌すぎる。

そして、フロントエンドと言っても結局はサーバー上で動くアプリケーションなので、
サーバーに不具合があると全体がぶっ壊れるし、アップデートではなくデプロイが必要になる。
サーバー維持費もかかる。サーバーやネットワークの設定も必要になる。なんだこのめんどくささは。

一方、Unityは十分に成熟しているし、Unity自体が無くなる可能性は少なくとも5年先でもないだろう。
（一方でNext.jsは個人的にそろそろ消え始める技術だと思ってる）
そしてフロントエンド自体にかかるサーバー維持費とかいうものも、スマホアプリ・デスクトップアプリならない。
マルチプラットフォーム対応が用意で、Webで作ったら「スマホ展開したい！」という自分の願望を叶えるのは至難の業となるが、
Unityならいとも容易く叶ってしまう。

バックエンドにGoとPostgreSQLを採用した理由も「無くなる可能性も大きく変わる可能性も低い」から。
長く同じコードが動いてほしいのだ。
Firebase自体ももうGoogleが潰れたとしても別会社が引き継ぐぐらい長く持つと思う。
